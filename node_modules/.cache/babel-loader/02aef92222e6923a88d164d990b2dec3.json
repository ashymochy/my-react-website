{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport FormLabel, { formLabelClasses } from '../FormLabel';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { getInputLabelUtilityClasses } from './inputLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    formControl,\n    size,\n    shrink,\n    disableAnimation,\n    variant,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', formControl && 'formControl', !disableAnimation && 'animated', shrink && 'shrink', size === 'small' && 'sizeSmall', variant],\n    asterisk: [required && 'asterisk']\n  };\n  const composedClasses = composeClasses(slots, getInputLabelUtilityClasses, classes);\n  return { ...classes,\n    // forward the focused, disabled, etc. classes to the FormLabel\n    ...composedClasses\n  };\n};\n\nconst InputLabelRoot = styled(FormLabel, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiInputLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formLabelClasses.asterisk}`]: styles.asterisk\n    }, styles.root, ownerState.formControl && styles.formControl, ownerState.size === 'small' && styles.sizeSmall, ownerState.shrink && styles.shrink, !ownerState.disableAnimation && styles.animated, styles[ownerState.variant]];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  return {\n    display: 'block',\n    transformOrigin: 'top left',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    maxWidth: '100%',\n    ...(ownerState.formControl && {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // slight alteration to spec spacing to match visual spec result\n      transform: 'translate(0, 20px) scale(1)'\n    }),\n    ...(ownerState.size === 'small' && {\n      // Compensation for the `Input.inputSizeSmall` style.\n      transform: 'translate(0, 17px) scale(1)'\n    }),\n    ...(ownerState.shrink && {\n      transform: 'translate(0, -1.5px) scale(0.75)',\n      transformOrigin: 'top left',\n      maxWidth: '133%'\n    }),\n    ...(!ownerState.disableAnimation && {\n      transition: theme.transitions.create(['color', 'transform', 'max-width'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    }),\n    ...(ownerState.variant === 'filled' && {\n      // Chrome's autofill feature gives the input field a yellow background.\n      // Since the input field is behind the label in the HTML tree,\n      // the input field is drawn last and hides the label with an opaque background color.\n      // zIndex: 1 will raise the label above opaque background-colors of input.\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(12px, 16px) scale(1)',\n      maxWidth: 'calc(100% - 24px)',\n      ...(ownerState.size === 'small' && {\n        transform: 'translate(12px, 13px) scale(1)'\n      }),\n      ...(ownerState.shrink && {\n        userSelect: 'none',\n        pointerEvents: 'auto',\n        transform: 'translate(12px, 7px) scale(0.75)',\n        maxWidth: 'calc(133% - 24px)',\n        ...(ownerState.size === 'small' && {\n          transform: 'translate(12px, 4px) scale(0.75)'\n        })\n      })\n    }),\n    ...(ownerState.variant === 'outlined' && {\n      // see comment above on filled.zIndex\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(14px, 16px) scale(1)',\n      maxWidth: 'calc(100% - 24px)',\n      ...(ownerState.size === 'small' && {\n        transform: 'translate(14px, 9px) scale(1)'\n      }),\n      ...(ownerState.shrink && {\n        userSelect: 'none',\n        pointerEvents: 'auto',\n        // Theoretically, we should have (8+5)*2/0.75 = 34px\n        // but it feels a better when it bleeds a bit on the left, so 32px.\n        maxWidth: 'calc(133% - 32px)',\n        transform: 'translate(14px, -9px) scale(0.75)'\n      })\n    })\n  };\n});\nconst InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiInputLabel',\n    props: inProps\n  });\n  const {\n    disableAnimation = false,\n    margin,\n    shrink: shrinkProp,\n    variant,\n    className,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['size', 'variant', 'required']\n  });\n  const ownerState = { ...props,\n    disableAnimation,\n    formControl: muiFormControl,\n    shrink,\n    size: fcs.size,\n    variant: fcs.variant,\n    required: fcs.required\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(InputLabelRoot, {\n    \"data-shrink\": shrink,\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the transition animation is disabled.\n   * @default false\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'normal'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['normal', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputLabel;","map":{"version":3,"sources":["C:/Users/admin/Desktop/rishavchanda.github.io-master/node_modules/@mui/material/InputLabel/InputLabel.js"],"names":["React","PropTypes","unstable_composeClasses","composeClasses","clsx","formControlState","useFormControl","FormLabel","formLabelClasses","useThemeProps","styled","rootShouldForwardProp","getInputLabelUtilityClasses","jsx","_jsx","useUtilityClasses","ownerState","classes","formControl","size","shrink","disableAnimation","variant","required","slots","root","asterisk","composedClasses","InputLabelRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","sizeSmall","animated","theme","display","transformOrigin","whiteSpace","overflow","textOverflow","maxWidth","position","left","top","transform","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","userSelect","InputLabel","forwardRef","inProps","ref","margin","shrinkProp","className","other","muiFormControl","filled","focused","adornedStart","fcs","states","process","env","NODE_ENV","propTypes","children","node","object","string","color","oneOfType","oneOf","bool","disabled","error","sx","arrayOf","func"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport FormLabel, { formLabelClasses } from '../FormLabel';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { getInputLabelUtilityClasses } from './inputLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    formControl,\n    size,\n    shrink,\n    disableAnimation,\n    variant,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', formControl && 'formControl', !disableAnimation && 'animated', shrink && 'shrink', size === 'small' && 'sizeSmall', variant],\n    asterisk: [required && 'asterisk']\n  };\n  const composedClasses = composeClasses(slots, getInputLabelUtilityClasses, classes);\n  return {\n    ...classes,\n    // forward the focused, disabled, etc. classes to the FormLabel\n    ...composedClasses\n  };\n};\nconst InputLabelRoot = styled(FormLabel, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiInputLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formLabelClasses.asterisk}`]: styles.asterisk\n    }, styles.root, ownerState.formControl && styles.formControl, ownerState.size === 'small' && styles.sizeSmall, ownerState.shrink && styles.shrink, !ownerState.disableAnimation && styles.animated, styles[ownerState.variant]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  display: 'block',\n  transformOrigin: 'top left',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  maxWidth: '100%',\n  ...(ownerState.formControl && {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    // slight alteration to spec spacing to match visual spec result\n    transform: 'translate(0, 20px) scale(1)'\n  }),\n  ...(ownerState.size === 'small' && {\n    // Compensation for the `Input.inputSizeSmall` style.\n    transform: 'translate(0, 17px) scale(1)'\n  }),\n  ...(ownerState.shrink && {\n    transform: 'translate(0, -1.5px) scale(0.75)',\n    transformOrigin: 'top left',\n    maxWidth: '133%'\n  }),\n  ...(!ownerState.disableAnimation && {\n    transition: theme.transitions.create(['color', 'transform', 'max-width'], {\n      duration: theme.transitions.duration.shorter,\n      easing: theme.transitions.easing.easeOut\n    })\n  }),\n  ...(ownerState.variant === 'filled' && {\n    // Chrome's autofill feature gives the input field a yellow background.\n    // Since the input field is behind the label in the HTML tree,\n    // the input field is drawn last and hides the label with an opaque background color.\n    // zIndex: 1 will raise the label above opaque background-colors of input.\n    zIndex: 1,\n    pointerEvents: 'none',\n    transform: 'translate(12px, 16px) scale(1)',\n    maxWidth: 'calc(100% - 24px)',\n    ...(ownerState.size === 'small' && {\n      transform: 'translate(12px, 13px) scale(1)'\n    }),\n    ...(ownerState.shrink && {\n      userSelect: 'none',\n      pointerEvents: 'auto',\n      transform: 'translate(12px, 7px) scale(0.75)',\n      maxWidth: 'calc(133% - 24px)',\n      ...(ownerState.size === 'small' && {\n        transform: 'translate(12px, 4px) scale(0.75)'\n      })\n    })\n  }),\n  ...(ownerState.variant === 'outlined' && {\n    // see comment above on filled.zIndex\n    zIndex: 1,\n    pointerEvents: 'none',\n    transform: 'translate(14px, 16px) scale(1)',\n    maxWidth: 'calc(100% - 24px)',\n    ...(ownerState.size === 'small' && {\n      transform: 'translate(14px, 9px) scale(1)'\n    }),\n    ...(ownerState.shrink && {\n      userSelect: 'none',\n      pointerEvents: 'auto',\n      // Theoretically, we should have (8+5)*2/0.75 = 34px\n      // but it feels a better when it bleeds a bit on the left, so 32px.\n      maxWidth: 'calc(133% - 32px)',\n      transform: 'translate(14px, -9px) scale(0.75)'\n    })\n  })\n}));\nconst InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiInputLabel',\n    props: inProps\n  });\n  const {\n    disableAnimation = false,\n    margin,\n    shrink: shrinkProp,\n    variant,\n    className,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let shrink = shrinkProp;\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['size', 'variant', 'required']\n  });\n  const ownerState = {\n    ...props,\n    disableAnimation,\n    formControl: muiFormControl,\n    shrink,\n    size: fcs.size,\n    variant: fcs.variant,\n    required: fcs.required\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(InputLabelRoot, {\n    \"data-shrink\": shrink,\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the transition animation is disabled.\n   * @default false\n   */\n  disableAnimation: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the `input` of this label is focused.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n  /**\n   * if `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'normal'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['normal', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputLabel;"]},"metadata":{},"sourceType":"module"}