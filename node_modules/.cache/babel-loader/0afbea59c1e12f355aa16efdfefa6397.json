{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\n\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme,\n    ownerState\n  } = _ref;\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    ...(!ownerState.disableGutters && {\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        minHeight: 64\n      }\n    })\n  };\n});\nconst AccordionSummaryContent = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return {\n    display: 'flex',\n    flexGrow: 1,\n    margin: '12px 0',\n    ...(!ownerState.disableGutters && {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    })\n  };\n});\nconst AccordionSummaryExpandIconWrapper = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    display: 'flex',\n    color: (theme.vars || theme).palette.action.active,\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    }),\n    [`&.${accordionSummaryClasses.expanded}`]: {\n      transform: 'rotate(180deg)'\n    }\n  };\n});\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const ownerState = { ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, {\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","map":{"version":3,"sources":["C:/Users/admin/Desktop/rishavchanda.github.io-master/node_modules/@mui/material/AccordionSummary/AccordionSummary.js"],"names":["React","PropTypes","clsx","unstable_composeClasses","composeClasses","styled","useThemeProps","ButtonBase","AccordionContext","accordionSummaryClasses","getAccordionSummaryUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","expanded","disabled","disableGutters","slots","root","focusVisible","content","expandIconWrapper","AccordionSummaryRoot","name","slot","overridesResolver","props","styles","theme","transition","duration","transitions","shortest","display","minHeight","padding","spacing","create","backgroundColor","vars","palette","action","focus","opacity","disabledOpacity","cursor","AccordionSummaryContent","flexGrow","margin","AccordionSummaryExpandIconWrapper","color","active","transform","AccordionSummary","forwardRef","inProps","ref","children","className","expandIcon","focusVisibleClassName","onClick","other","toggle","useContext","handleChange","event","focusRipple","disableRipple","component","process","env","NODE_ENV","propTypes","node","object","string","func","sx","oneOfType","arrayOf","bool"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    ...(!ownerState.disableGutters && {\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        minHeight: 64\n      }\n    })\n  };\n});\nconst AccordionSummaryContent = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(({\n  theme,\n  ownerState\n}) => ({\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0',\n  ...(!ownerState.disableGutters && {\n    transition: theme.transitions.create(['margin'], {\n      duration: theme.transitions.duration.shortest\n    }),\n    [`&.${accordionSummaryClasses.expanded}`]: {\n      margin: '20px 0'\n    }\n  })\n}));\nconst AccordionSummaryExpandIconWrapper = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n}));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, {\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;"]},"metadata":{},"sourceType":"module"}